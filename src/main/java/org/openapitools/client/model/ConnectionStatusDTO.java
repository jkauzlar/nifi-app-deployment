/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ConnectionStatusSnapshotDTO;
import org.openapitools.client.model.NodeConnectionStatusSnapshotDTO;

/**
 * ConnectionStatusDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T16:10:34.866069300-08:00[America/Los_Angeles]")
public class ConnectionStatusDTO {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_GROUP_ID = "groupId";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  private String groupId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STATS_LAST_REFRESHED = "statsLastRefreshed";
  @SerializedName(SERIALIZED_NAME_STATS_LAST_REFRESHED)
  private String statsLastRefreshed;

  public static final String SERIALIZED_NAME_SOURCE_ID = "sourceId";
  @SerializedName(SERIALIZED_NAME_SOURCE_ID)
  private String sourceId;

  public static final String SERIALIZED_NAME_SOURCE_NAME = "sourceName";
  @SerializedName(SERIALIZED_NAME_SOURCE_NAME)
  private String sourceName;

  public static final String SERIALIZED_NAME_DESTINATION_ID = "destinationId";
  @SerializedName(SERIALIZED_NAME_DESTINATION_ID)
  private String destinationId;

  public static final String SERIALIZED_NAME_DESTINATION_NAME = "destinationName";
  @SerializedName(SERIALIZED_NAME_DESTINATION_NAME)
  private String destinationName;

  public static final String SERIALIZED_NAME_AGGREGATE_SNAPSHOT = "aggregateSnapshot";
  @SerializedName(SERIALIZED_NAME_AGGREGATE_SNAPSHOT)
  private ConnectionStatusSnapshotDTO aggregateSnapshot;

  public static final String SERIALIZED_NAME_NODE_SNAPSHOTS = "nodeSnapshots";
  @SerializedName(SERIALIZED_NAME_NODE_SNAPSHOTS)
  private List<NodeConnectionStatusSnapshotDTO> nodeSnapshots = null;


  public ConnectionStatusDTO id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the connection
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the connection")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ConnectionStatusDTO groupId(String groupId) {
    
    this.groupId = groupId;
    return this;
  }

   /**
   * The ID of the Process Group that the connection belongs to
   * @return groupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Process Group that the connection belongs to")

  public String getGroupId() {
    return groupId;
  }


  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }


  public ConnectionStatusDTO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the connection
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the connection")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ConnectionStatusDTO statsLastRefreshed(String statsLastRefreshed) {
    
    this.statsLastRefreshed = statsLastRefreshed;
    return this;
  }

   /**
   * The timestamp of when the stats were last refreshed
   * @return statsLastRefreshed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of when the stats were last refreshed")

  public String getStatsLastRefreshed() {
    return statsLastRefreshed;
  }


  public void setStatsLastRefreshed(String statsLastRefreshed) {
    this.statsLastRefreshed = statsLastRefreshed;
  }


  public ConnectionStatusDTO sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * The ID of the source component
   * @return sourceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the source component")

  public String getSourceId() {
    return sourceId;
  }


  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public ConnectionStatusDTO sourceName(String sourceName) {
    
    this.sourceName = sourceName;
    return this;
  }

   /**
   * The name of the source component
   * @return sourceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the source component")

  public String getSourceName() {
    return sourceName;
  }


  public void setSourceName(String sourceName) {
    this.sourceName = sourceName;
  }


  public ConnectionStatusDTO destinationId(String destinationId) {
    
    this.destinationId = destinationId;
    return this;
  }

   /**
   * The ID of the destination component
   * @return destinationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the destination component")

  public String getDestinationId() {
    return destinationId;
  }


  public void setDestinationId(String destinationId) {
    this.destinationId = destinationId;
  }


  public ConnectionStatusDTO destinationName(String destinationName) {
    
    this.destinationName = destinationName;
    return this;
  }

   /**
   * The name of the destination component
   * @return destinationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the destination component")

  public String getDestinationName() {
    return destinationName;
  }


  public void setDestinationName(String destinationName) {
    this.destinationName = destinationName;
  }


  public ConnectionStatusDTO aggregateSnapshot(ConnectionStatusSnapshotDTO aggregateSnapshot) {
    
    this.aggregateSnapshot = aggregateSnapshot;
    return this;
  }

   /**
   * Get aggregateSnapshot
   * @return aggregateSnapshot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConnectionStatusSnapshotDTO getAggregateSnapshot() {
    return aggregateSnapshot;
  }


  public void setAggregateSnapshot(ConnectionStatusSnapshotDTO aggregateSnapshot) {
    this.aggregateSnapshot = aggregateSnapshot;
  }


  public ConnectionStatusDTO nodeSnapshots(List<NodeConnectionStatusSnapshotDTO> nodeSnapshots) {
    
    this.nodeSnapshots = nodeSnapshots;
    return this;
  }

  public ConnectionStatusDTO addNodeSnapshotsItem(NodeConnectionStatusSnapshotDTO nodeSnapshotsItem) {
    if (this.nodeSnapshots == null) {
      this.nodeSnapshots = new ArrayList<NodeConnectionStatusSnapshotDTO>();
    }
    this.nodeSnapshots.add(nodeSnapshotsItem);
    return this;
  }

   /**
   * A list of status snapshots for each node
   * @return nodeSnapshots
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of status snapshots for each node")

  public List<NodeConnectionStatusSnapshotDTO> getNodeSnapshots() {
    return nodeSnapshots;
  }


  public void setNodeSnapshots(List<NodeConnectionStatusSnapshotDTO> nodeSnapshots) {
    this.nodeSnapshots = nodeSnapshots;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionStatusDTO connectionStatusDTO = (ConnectionStatusDTO) o;
    return Objects.equals(this.id, connectionStatusDTO.id) &&
        Objects.equals(this.groupId, connectionStatusDTO.groupId) &&
        Objects.equals(this.name, connectionStatusDTO.name) &&
        Objects.equals(this.statsLastRefreshed, connectionStatusDTO.statsLastRefreshed) &&
        Objects.equals(this.sourceId, connectionStatusDTO.sourceId) &&
        Objects.equals(this.sourceName, connectionStatusDTO.sourceName) &&
        Objects.equals(this.destinationId, connectionStatusDTO.destinationId) &&
        Objects.equals(this.destinationName, connectionStatusDTO.destinationName) &&
        Objects.equals(this.aggregateSnapshot, connectionStatusDTO.aggregateSnapshot) &&
        Objects.equals(this.nodeSnapshots, connectionStatusDTO.nodeSnapshots);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, groupId, name, statsLastRefreshed, sourceId, sourceName, destinationId, destinationName, aggregateSnapshot, nodeSnapshots);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionStatusDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    statsLastRefreshed: ").append(toIndentedString(statsLastRefreshed)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    sourceName: ").append(toIndentedString(sourceName)).append("\n");
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    destinationName: ").append(toIndentedString(destinationName)).append("\n");
    sb.append("    aggregateSnapshot: ").append(toIndentedString(aggregateSnapshot)).append("\n");
    sb.append("    nodeSnapshots: ").append(toIndentedString(nodeSnapshots)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

