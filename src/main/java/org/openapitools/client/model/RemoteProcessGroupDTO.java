/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.PositionDTO;
import org.openapitools.client.model.RemoteProcessGroupContentsDTO;

/**
 * RemoteProcessGroupDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T16:10:34.866069300-08:00[America/Los_Angeles]")
public class RemoteProcessGroupDTO {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_VERSIONED_COMPONENT_ID = "versionedComponentId";
  @SerializedName(SERIALIZED_NAME_VERSIONED_COMPONENT_ID)
  private String versionedComponentId;

  public static final String SERIALIZED_NAME_PARENT_GROUP_ID = "parentGroupId";
  @SerializedName(SERIALIZED_NAME_PARENT_GROUP_ID)
  private String parentGroupId;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private PositionDTO position;

  public static final String SERIALIZED_NAME_TARGET_URI = "targetUri";
  @SerializedName(SERIALIZED_NAME_TARGET_URI)
  private String targetUri;

  public static final String SERIALIZED_NAME_TARGET_URIS = "targetUris";
  @SerializedName(SERIALIZED_NAME_TARGET_URIS)
  private String targetUris;

  public static final String SERIALIZED_NAME_TARGET_SECURE = "targetSecure";
  @SerializedName(SERIALIZED_NAME_TARGET_SECURE)
  private Boolean targetSecure;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_COMMUNICATIONS_TIMEOUT = "communicationsTimeout";
  @SerializedName(SERIALIZED_NAME_COMMUNICATIONS_TIMEOUT)
  private String communicationsTimeout;

  public static final String SERIALIZED_NAME_YIELD_DURATION = "yieldDuration";
  @SerializedName(SERIALIZED_NAME_YIELD_DURATION)
  private String yieldDuration;

  public static final String SERIALIZED_NAME_TRANSPORT_PROTOCOL = "transportProtocol";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_PROTOCOL)
  private String transportProtocol;

  public static final String SERIALIZED_NAME_LOCAL_NETWORK_INTERFACE = "localNetworkInterface";
  @SerializedName(SERIALIZED_NAME_LOCAL_NETWORK_INTERFACE)
  private String localNetworkInterface;

  public static final String SERIALIZED_NAME_PROXY_HOST = "proxyHost";
  @SerializedName(SERIALIZED_NAME_PROXY_HOST)
  private String proxyHost;

  public static final String SERIALIZED_NAME_PROXY_PORT = "proxyPort";
  @SerializedName(SERIALIZED_NAME_PROXY_PORT)
  private Integer proxyPort;

  public static final String SERIALIZED_NAME_PROXY_USER = "proxyUser";
  @SerializedName(SERIALIZED_NAME_PROXY_USER)
  private String proxyUser;

  public static final String SERIALIZED_NAME_PROXY_PASSWORD = "proxyPassword";
  @SerializedName(SERIALIZED_NAME_PROXY_PASSWORD)
  private String proxyPassword;

  public static final String SERIALIZED_NAME_AUTHORIZATION_ISSUES = "authorizationIssues";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION_ISSUES)
  private List<String> authorizationIssues = null;

  public static final String SERIALIZED_NAME_VALIDATION_ERRORS = "validationErrors";
  @SerializedName(SERIALIZED_NAME_VALIDATION_ERRORS)
  private List<String> validationErrors = null;

  public static final String SERIALIZED_NAME_TRANSMITTING = "transmitting";
  @SerializedName(SERIALIZED_NAME_TRANSMITTING)
  private Boolean transmitting;

  public static final String SERIALIZED_NAME_INPUT_PORT_COUNT = "inputPortCount";
  @SerializedName(SERIALIZED_NAME_INPUT_PORT_COUNT)
  private Integer inputPortCount;

  public static final String SERIALIZED_NAME_OUTPUT_PORT_COUNT = "outputPortCount";
  @SerializedName(SERIALIZED_NAME_OUTPUT_PORT_COUNT)
  private Integer outputPortCount;

  public static final String SERIALIZED_NAME_ACTIVE_REMOTE_INPUT_PORT_COUNT = "activeRemoteInputPortCount";
  @SerializedName(SERIALIZED_NAME_ACTIVE_REMOTE_INPUT_PORT_COUNT)
  private Integer activeRemoteInputPortCount;

  public static final String SERIALIZED_NAME_INACTIVE_REMOTE_INPUT_PORT_COUNT = "inactiveRemoteInputPortCount";
  @SerializedName(SERIALIZED_NAME_INACTIVE_REMOTE_INPUT_PORT_COUNT)
  private Integer inactiveRemoteInputPortCount;

  public static final String SERIALIZED_NAME_ACTIVE_REMOTE_OUTPUT_PORT_COUNT = "activeRemoteOutputPortCount";
  @SerializedName(SERIALIZED_NAME_ACTIVE_REMOTE_OUTPUT_PORT_COUNT)
  private Integer activeRemoteOutputPortCount;

  public static final String SERIALIZED_NAME_INACTIVE_REMOTE_OUTPUT_PORT_COUNT = "inactiveRemoteOutputPortCount";
  @SerializedName(SERIALIZED_NAME_INACTIVE_REMOTE_OUTPUT_PORT_COUNT)
  private Integer inactiveRemoteOutputPortCount;

  public static final String SERIALIZED_NAME_FLOW_REFRESHED = "flowRefreshed";
  @SerializedName(SERIALIZED_NAME_FLOW_REFRESHED)
  private String flowRefreshed;

  public static final String SERIALIZED_NAME_CONTENTS = "contents";
  @SerializedName(SERIALIZED_NAME_CONTENTS)
  private RemoteProcessGroupContentsDTO contents;


  public RemoteProcessGroupDTO id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of the component.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the component.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public RemoteProcessGroupDTO versionedComponentId(String versionedComponentId) {
    
    this.versionedComponentId = versionedComponentId;
    return this;
  }

   /**
   * The ID of the corresponding component that is under version control
   * @return versionedComponentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the corresponding component that is under version control")

  public String getVersionedComponentId() {
    return versionedComponentId;
  }


  public void setVersionedComponentId(String versionedComponentId) {
    this.versionedComponentId = versionedComponentId;
  }


  public RemoteProcessGroupDTO parentGroupId(String parentGroupId) {
    
    this.parentGroupId = parentGroupId;
    return this;
  }

   /**
   * The id of parent process group of this component if applicable.
   * @return parentGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of parent process group of this component if applicable.")

  public String getParentGroupId() {
    return parentGroupId;
  }


  public void setParentGroupId(String parentGroupId) {
    this.parentGroupId = parentGroupId;
  }


  public RemoteProcessGroupDTO position(PositionDTO position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PositionDTO getPosition() {
    return position;
  }


  public void setPosition(PositionDTO position) {
    this.position = position;
  }


  public RemoteProcessGroupDTO targetUri(String targetUri) {
    
    this.targetUri = targetUri;
    return this;
  }

   /**
   * The target URI of the remote process group. If target uri is not set, but uris are set, then returns the first url in the urls. If neither target uri nor uris are set, then returns null.
   * @return targetUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The target URI of the remote process group. If target uri is not set, but uris are set, then returns the first url in the urls. If neither target uri nor uris are set, then returns null.")

  public String getTargetUri() {
    return targetUri;
  }


  public void setTargetUri(String targetUri) {
    this.targetUri = targetUri;
  }


  public RemoteProcessGroupDTO targetUris(String targetUris) {
    
    this.targetUris = targetUris;
    return this;
  }

   /**
   * The target URI of the remote process group. If target uris is not set but target uri is set, then returns a collection containing the single target uri. If neither target uris nor uris are set, then returns null.
   * @return targetUris
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The target URI of the remote process group. If target uris is not set but target uri is set, then returns a collection containing the single target uri. If neither target uris nor uris are set, then returns null.")

  public String getTargetUris() {
    return targetUris;
  }


  public void setTargetUris(String targetUris) {
    this.targetUris = targetUris;
  }


  public RemoteProcessGroupDTO targetSecure(Boolean targetSecure) {
    
    this.targetSecure = targetSecure;
    return this;
  }

   /**
   * Whether the target is running securely.
   * @return targetSecure
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the target is running securely.")

  public Boolean getTargetSecure() {
    return targetSecure;
  }


  public void setTargetSecure(Boolean targetSecure) {
    this.targetSecure = targetSecure;
  }


  public RemoteProcessGroupDTO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the remote process group.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the remote process group.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RemoteProcessGroupDTO comments(String comments) {
    
    this.comments = comments;
    return this;
  }

   /**
   * The comments for the remote process group.
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The comments for the remote process group.")

  public String getComments() {
    return comments;
  }


  public void setComments(String comments) {
    this.comments = comments;
  }


  public RemoteProcessGroupDTO communicationsTimeout(String communicationsTimeout) {
    
    this.communicationsTimeout = communicationsTimeout;
    return this;
  }

   /**
   * The time period used for the timeout when communicating with the target.
   * @return communicationsTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time period used for the timeout when communicating with the target.")

  public String getCommunicationsTimeout() {
    return communicationsTimeout;
  }


  public void setCommunicationsTimeout(String communicationsTimeout) {
    this.communicationsTimeout = communicationsTimeout;
  }


  public RemoteProcessGroupDTO yieldDuration(String yieldDuration) {
    
    this.yieldDuration = yieldDuration;
    return this;
  }

   /**
   * When yielding, this amount of time must elapse before the remote process group is scheduled again.
   * @return yieldDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When yielding, this amount of time must elapse before the remote process group is scheduled again.")

  public String getYieldDuration() {
    return yieldDuration;
  }


  public void setYieldDuration(String yieldDuration) {
    this.yieldDuration = yieldDuration;
  }


  public RemoteProcessGroupDTO transportProtocol(String transportProtocol) {
    
    this.transportProtocol = transportProtocol;
    return this;
  }

   /**
   * Get transportProtocol
   * @return transportProtocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransportProtocol() {
    return transportProtocol;
  }


  public void setTransportProtocol(String transportProtocol) {
    this.transportProtocol = transportProtocol;
  }


  public RemoteProcessGroupDTO localNetworkInterface(String localNetworkInterface) {
    
    this.localNetworkInterface = localNetworkInterface;
    return this;
  }

   /**
   * The local network interface to send/receive data. If not specified, any local address is used. If clustered, all nodes must have an interface with this identifier.
   * @return localNetworkInterface
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The local network interface to send/receive data. If not specified, any local address is used. If clustered, all nodes must have an interface with this identifier.")

  public String getLocalNetworkInterface() {
    return localNetworkInterface;
  }


  public void setLocalNetworkInterface(String localNetworkInterface) {
    this.localNetworkInterface = localNetworkInterface;
  }


  public RemoteProcessGroupDTO proxyHost(String proxyHost) {
    
    this.proxyHost = proxyHost;
    return this;
  }

   /**
   * Get proxyHost
   * @return proxyHost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProxyHost() {
    return proxyHost;
  }


  public void setProxyHost(String proxyHost) {
    this.proxyHost = proxyHost;
  }


  public RemoteProcessGroupDTO proxyPort(Integer proxyPort) {
    
    this.proxyPort = proxyPort;
    return this;
  }

   /**
   * Get proxyPort
   * @return proxyPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProxyPort() {
    return proxyPort;
  }


  public void setProxyPort(Integer proxyPort) {
    this.proxyPort = proxyPort;
  }


  public RemoteProcessGroupDTO proxyUser(String proxyUser) {
    
    this.proxyUser = proxyUser;
    return this;
  }

   /**
   * Get proxyUser
   * @return proxyUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProxyUser() {
    return proxyUser;
  }


  public void setProxyUser(String proxyUser) {
    this.proxyUser = proxyUser;
  }


  public RemoteProcessGroupDTO proxyPassword(String proxyPassword) {
    
    this.proxyPassword = proxyPassword;
    return this;
  }

   /**
   * Get proxyPassword
   * @return proxyPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProxyPassword() {
    return proxyPassword;
  }


  public void setProxyPassword(String proxyPassword) {
    this.proxyPassword = proxyPassword;
  }


  public RemoteProcessGroupDTO authorizationIssues(List<String> authorizationIssues) {
    
    this.authorizationIssues = authorizationIssues;
    return this;
  }

  public RemoteProcessGroupDTO addAuthorizationIssuesItem(String authorizationIssuesItem) {
    if (this.authorizationIssues == null) {
      this.authorizationIssues = new ArrayList<String>();
    }
    this.authorizationIssues.add(authorizationIssuesItem);
    return this;
  }

   /**
   * Any remote authorization issues for the remote process group.
   * @return authorizationIssues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any remote authorization issues for the remote process group.")

  public List<String> getAuthorizationIssues() {
    return authorizationIssues;
  }


  public void setAuthorizationIssues(List<String> authorizationIssues) {
    this.authorizationIssues = authorizationIssues;
  }


  public RemoteProcessGroupDTO validationErrors(List<String> validationErrors) {
    
    this.validationErrors = validationErrors;
    return this;
  }

  public RemoteProcessGroupDTO addValidationErrorsItem(String validationErrorsItem) {
    if (this.validationErrors == null) {
      this.validationErrors = new ArrayList<String>();
    }
    this.validationErrors.add(validationErrorsItem);
    return this;
  }

   /**
   * The validation errors for the remote process group. These validation errors represent the problems with the remote process group that must be resolved before it can transmit.
   * @return validationErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The validation errors for the remote process group. These validation errors represent the problems with the remote process group that must be resolved before it can transmit.")

  public List<String> getValidationErrors() {
    return validationErrors;
  }


  public void setValidationErrors(List<String> validationErrors) {
    this.validationErrors = validationErrors;
  }


  public RemoteProcessGroupDTO transmitting(Boolean transmitting) {
    
    this.transmitting = transmitting;
    return this;
  }

   /**
   * Whether the remote process group is actively transmitting.
   * @return transmitting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the remote process group is actively transmitting.")

  public Boolean getTransmitting() {
    return transmitting;
  }


  public void setTransmitting(Boolean transmitting) {
    this.transmitting = transmitting;
  }


  public RemoteProcessGroupDTO inputPortCount(Integer inputPortCount) {
    
    this.inputPortCount = inputPortCount;
    return this;
  }

   /**
   * The number of remote input ports currently available on the target.
   * @return inputPortCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of remote input ports currently available on the target.")

  public Integer getInputPortCount() {
    return inputPortCount;
  }


  public void setInputPortCount(Integer inputPortCount) {
    this.inputPortCount = inputPortCount;
  }


  public RemoteProcessGroupDTO outputPortCount(Integer outputPortCount) {
    
    this.outputPortCount = outputPortCount;
    return this;
  }

   /**
   * The number of remote output ports currently available on the target.
   * @return outputPortCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of remote output ports currently available on the target.")

  public Integer getOutputPortCount() {
    return outputPortCount;
  }


  public void setOutputPortCount(Integer outputPortCount) {
    this.outputPortCount = outputPortCount;
  }


  public RemoteProcessGroupDTO activeRemoteInputPortCount(Integer activeRemoteInputPortCount) {
    
    this.activeRemoteInputPortCount = activeRemoteInputPortCount;
    return this;
  }

   /**
   * The number of active remote input ports.
   * @return activeRemoteInputPortCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of active remote input ports.")

  public Integer getActiveRemoteInputPortCount() {
    return activeRemoteInputPortCount;
  }


  public void setActiveRemoteInputPortCount(Integer activeRemoteInputPortCount) {
    this.activeRemoteInputPortCount = activeRemoteInputPortCount;
  }


  public RemoteProcessGroupDTO inactiveRemoteInputPortCount(Integer inactiveRemoteInputPortCount) {
    
    this.inactiveRemoteInputPortCount = inactiveRemoteInputPortCount;
    return this;
  }

   /**
   * The number of inactive remote input ports.
   * @return inactiveRemoteInputPortCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of inactive remote input ports.")

  public Integer getInactiveRemoteInputPortCount() {
    return inactiveRemoteInputPortCount;
  }


  public void setInactiveRemoteInputPortCount(Integer inactiveRemoteInputPortCount) {
    this.inactiveRemoteInputPortCount = inactiveRemoteInputPortCount;
  }


  public RemoteProcessGroupDTO activeRemoteOutputPortCount(Integer activeRemoteOutputPortCount) {
    
    this.activeRemoteOutputPortCount = activeRemoteOutputPortCount;
    return this;
  }

   /**
   * The number of active remote output ports.
   * @return activeRemoteOutputPortCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of active remote output ports.")

  public Integer getActiveRemoteOutputPortCount() {
    return activeRemoteOutputPortCount;
  }


  public void setActiveRemoteOutputPortCount(Integer activeRemoteOutputPortCount) {
    this.activeRemoteOutputPortCount = activeRemoteOutputPortCount;
  }


  public RemoteProcessGroupDTO inactiveRemoteOutputPortCount(Integer inactiveRemoteOutputPortCount) {
    
    this.inactiveRemoteOutputPortCount = inactiveRemoteOutputPortCount;
    return this;
  }

   /**
   * The number of inactive remote output ports.
   * @return inactiveRemoteOutputPortCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of inactive remote output ports.")

  public Integer getInactiveRemoteOutputPortCount() {
    return inactiveRemoteOutputPortCount;
  }


  public void setInactiveRemoteOutputPortCount(Integer inactiveRemoteOutputPortCount) {
    this.inactiveRemoteOutputPortCount = inactiveRemoteOutputPortCount;
  }


  public RemoteProcessGroupDTO flowRefreshed(String flowRefreshed) {
    
    this.flowRefreshed = flowRefreshed;
    return this;
  }

   /**
   * The timestamp when this remote process group was last refreshed.
   * @return flowRefreshed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp when this remote process group was last refreshed.")

  public String getFlowRefreshed() {
    return flowRefreshed;
  }


  public void setFlowRefreshed(String flowRefreshed) {
    this.flowRefreshed = flowRefreshed;
  }


  public RemoteProcessGroupDTO contents(RemoteProcessGroupContentsDTO contents) {
    
    this.contents = contents;
    return this;
  }

   /**
   * Get contents
   * @return contents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RemoteProcessGroupContentsDTO getContents() {
    return contents;
  }


  public void setContents(RemoteProcessGroupContentsDTO contents) {
    this.contents = contents;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteProcessGroupDTO remoteProcessGroupDTO = (RemoteProcessGroupDTO) o;
    return Objects.equals(this.id, remoteProcessGroupDTO.id) &&
        Objects.equals(this.versionedComponentId, remoteProcessGroupDTO.versionedComponentId) &&
        Objects.equals(this.parentGroupId, remoteProcessGroupDTO.parentGroupId) &&
        Objects.equals(this.position, remoteProcessGroupDTO.position) &&
        Objects.equals(this.targetUri, remoteProcessGroupDTO.targetUri) &&
        Objects.equals(this.targetUris, remoteProcessGroupDTO.targetUris) &&
        Objects.equals(this.targetSecure, remoteProcessGroupDTO.targetSecure) &&
        Objects.equals(this.name, remoteProcessGroupDTO.name) &&
        Objects.equals(this.comments, remoteProcessGroupDTO.comments) &&
        Objects.equals(this.communicationsTimeout, remoteProcessGroupDTO.communicationsTimeout) &&
        Objects.equals(this.yieldDuration, remoteProcessGroupDTO.yieldDuration) &&
        Objects.equals(this.transportProtocol, remoteProcessGroupDTO.transportProtocol) &&
        Objects.equals(this.localNetworkInterface, remoteProcessGroupDTO.localNetworkInterface) &&
        Objects.equals(this.proxyHost, remoteProcessGroupDTO.proxyHost) &&
        Objects.equals(this.proxyPort, remoteProcessGroupDTO.proxyPort) &&
        Objects.equals(this.proxyUser, remoteProcessGroupDTO.proxyUser) &&
        Objects.equals(this.proxyPassword, remoteProcessGroupDTO.proxyPassword) &&
        Objects.equals(this.authorizationIssues, remoteProcessGroupDTO.authorizationIssues) &&
        Objects.equals(this.validationErrors, remoteProcessGroupDTO.validationErrors) &&
        Objects.equals(this.transmitting, remoteProcessGroupDTO.transmitting) &&
        Objects.equals(this.inputPortCount, remoteProcessGroupDTO.inputPortCount) &&
        Objects.equals(this.outputPortCount, remoteProcessGroupDTO.outputPortCount) &&
        Objects.equals(this.activeRemoteInputPortCount, remoteProcessGroupDTO.activeRemoteInputPortCount) &&
        Objects.equals(this.inactiveRemoteInputPortCount, remoteProcessGroupDTO.inactiveRemoteInputPortCount) &&
        Objects.equals(this.activeRemoteOutputPortCount, remoteProcessGroupDTO.activeRemoteOutputPortCount) &&
        Objects.equals(this.inactiveRemoteOutputPortCount, remoteProcessGroupDTO.inactiveRemoteOutputPortCount) &&
        Objects.equals(this.flowRefreshed, remoteProcessGroupDTO.flowRefreshed) &&
        Objects.equals(this.contents, remoteProcessGroupDTO.contents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, versionedComponentId, parentGroupId, position, targetUri, targetUris, targetSecure, name, comments, communicationsTimeout, yieldDuration, transportProtocol, localNetworkInterface, proxyHost, proxyPort, proxyUser, proxyPassword, authorizationIssues, validationErrors, transmitting, inputPortCount, outputPortCount, activeRemoteInputPortCount, inactiveRemoteInputPortCount, activeRemoteOutputPortCount, inactiveRemoteOutputPortCount, flowRefreshed, contents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteProcessGroupDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    versionedComponentId: ").append(toIndentedString(versionedComponentId)).append("\n");
    sb.append("    parentGroupId: ").append(toIndentedString(parentGroupId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    targetUri: ").append(toIndentedString(targetUri)).append("\n");
    sb.append("    targetUris: ").append(toIndentedString(targetUris)).append("\n");
    sb.append("    targetSecure: ").append(toIndentedString(targetSecure)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    communicationsTimeout: ").append(toIndentedString(communicationsTimeout)).append("\n");
    sb.append("    yieldDuration: ").append(toIndentedString(yieldDuration)).append("\n");
    sb.append("    transportProtocol: ").append(toIndentedString(transportProtocol)).append("\n");
    sb.append("    localNetworkInterface: ").append(toIndentedString(localNetworkInterface)).append("\n");
    sb.append("    proxyHost: ").append(toIndentedString(proxyHost)).append("\n");
    sb.append("    proxyPort: ").append(toIndentedString(proxyPort)).append("\n");
    sb.append("    proxyUser: ").append(toIndentedString(proxyUser)).append("\n");
    sb.append("    proxyPassword: ").append(toIndentedString(proxyPassword)).append("\n");
    sb.append("    authorizationIssues: ").append(toIndentedString(authorizationIssues)).append("\n");
    sb.append("    validationErrors: ").append(toIndentedString(validationErrors)).append("\n");
    sb.append("    transmitting: ").append(toIndentedString(transmitting)).append("\n");
    sb.append("    inputPortCount: ").append(toIndentedString(inputPortCount)).append("\n");
    sb.append("    outputPortCount: ").append(toIndentedString(outputPortCount)).append("\n");
    sb.append("    activeRemoteInputPortCount: ").append(toIndentedString(activeRemoteInputPortCount)).append("\n");
    sb.append("    inactiveRemoteInputPortCount: ").append(toIndentedString(inactiveRemoteInputPortCount)).append("\n");
    sb.append("    activeRemoteOutputPortCount: ").append(toIndentedString(activeRemoteOutputPortCount)).append("\n");
    sb.append("    inactiveRemoteOutputPortCount: ").append(toIndentedString(inactiveRemoteOutputPortCount)).append("\n");
    sb.append("    flowRefreshed: ").append(toIndentedString(flowRefreshed)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

