/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FlowConfigurationDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T16:10:34.866069300-08:00[America/Los_Angeles]")
public class FlowConfigurationDTO {
  public static final String SERIALIZED_NAME_SUPPORTS_MANAGED_AUTHORIZER = "supportsManagedAuthorizer";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_MANAGED_AUTHORIZER)
  private Boolean supportsManagedAuthorizer;

  public static final String SERIALIZED_NAME_SUPPORTS_CONFIGURABLE_AUTHORIZER = "supportsConfigurableAuthorizer";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_CONFIGURABLE_AUTHORIZER)
  private Boolean supportsConfigurableAuthorizer;

  public static final String SERIALIZED_NAME_SUPPORTS_CONFIGURABLE_USERS_AND_GROUPS = "supportsConfigurableUsersAndGroups";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_CONFIGURABLE_USERS_AND_GROUPS)
  private Boolean supportsConfigurableUsersAndGroups;

  public static final String SERIALIZED_NAME_AUTO_REFRESH_INTERVAL_SECONDS = "autoRefreshIntervalSeconds";
  @SerializedName(SERIALIZED_NAME_AUTO_REFRESH_INTERVAL_SECONDS)
  private Long autoRefreshIntervalSeconds;

  public static final String SERIALIZED_NAME_CURRENT_TIME = "currentTime";
  @SerializedName(SERIALIZED_NAME_CURRENT_TIME)
  private String currentTime;

  public static final String SERIALIZED_NAME_TIME_OFFSET = "timeOffset";
  @SerializedName(SERIALIZED_NAME_TIME_OFFSET)
  private Integer timeOffset;


   /**
   * Whether this NiFi supports a managed authorizer. Managed authorizers can visualize users, groups, and policies in the UI.
   * @return supportsManagedAuthorizer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether this NiFi supports a managed authorizer. Managed authorizers can visualize users, groups, and policies in the UI.")

  public Boolean getSupportsManagedAuthorizer() {
    return supportsManagedAuthorizer;
  }




   /**
   * Whether this NiFi supports a configurable authorizer.
   * @return supportsConfigurableAuthorizer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether this NiFi supports a configurable authorizer.")

  public Boolean getSupportsConfigurableAuthorizer() {
    return supportsConfigurableAuthorizer;
  }




   /**
   * Whether this NiFi supports configurable users and groups.
   * @return supportsConfigurableUsersAndGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether this NiFi supports configurable users and groups.")

  public Boolean getSupportsConfigurableUsersAndGroups() {
    return supportsConfigurableUsersAndGroups;
  }




   /**
   * The interval in seconds between the automatic NiFi refresh requests.
   * @return autoRefreshIntervalSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The interval in seconds between the automatic NiFi refresh requests.")

  public Long getAutoRefreshIntervalSeconds() {
    return autoRefreshIntervalSeconds;
  }




  public FlowConfigurationDTO currentTime(String currentTime) {
    
    this.currentTime = currentTime;
    return this;
  }

   /**
   * The current time on the system.
   * @return currentTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current time on the system.")

  public String getCurrentTime() {
    return currentTime;
  }


  public void setCurrentTime(String currentTime) {
    this.currentTime = currentTime;
  }


  public FlowConfigurationDTO timeOffset(Integer timeOffset) {
    
    this.timeOffset = timeOffset;
    return this;
  }

   /**
   * The time offset of the system.
   * @return timeOffset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time offset of the system.")

  public Integer getTimeOffset() {
    return timeOffset;
  }


  public void setTimeOffset(Integer timeOffset) {
    this.timeOffset = timeOffset;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowConfigurationDTO flowConfigurationDTO = (FlowConfigurationDTO) o;
    return Objects.equals(this.supportsManagedAuthorizer, flowConfigurationDTO.supportsManagedAuthorizer) &&
        Objects.equals(this.supportsConfigurableAuthorizer, flowConfigurationDTO.supportsConfigurableAuthorizer) &&
        Objects.equals(this.supportsConfigurableUsersAndGroups, flowConfigurationDTO.supportsConfigurableUsersAndGroups) &&
        Objects.equals(this.autoRefreshIntervalSeconds, flowConfigurationDTO.autoRefreshIntervalSeconds) &&
        Objects.equals(this.currentTime, flowConfigurationDTO.currentTime) &&
        Objects.equals(this.timeOffset, flowConfigurationDTO.timeOffset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(supportsManagedAuthorizer, supportsConfigurableAuthorizer, supportsConfigurableUsersAndGroups, autoRefreshIntervalSeconds, currentTime, timeOffset);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowConfigurationDTO {\n");
    sb.append("    supportsManagedAuthorizer: ").append(toIndentedString(supportsManagedAuthorizer)).append("\n");
    sb.append("    supportsConfigurableAuthorizer: ").append(toIndentedString(supportsConfigurableAuthorizer)).append("\n");
    sb.append("    supportsConfigurableUsersAndGroups: ").append(toIndentedString(supportsConfigurableUsersAndGroups)).append("\n");
    sb.append("    autoRefreshIntervalSeconds: ").append(toIndentedString(autoRefreshIntervalSeconds)).append("\n");
    sb.append("    currentTime: ").append(toIndentedString(currentTime)).append("\n");
    sb.append("    timeOffset: ").append(toIndentedString(timeOffset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

