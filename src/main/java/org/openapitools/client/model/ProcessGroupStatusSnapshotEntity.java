/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ProcessGroupStatusSnapshotDTO;

/**
 * ProcessGroupStatusSnapshotEntity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T16:10:34.866069300-08:00[America/Los_Angeles]")
public class ProcessGroupStatusSnapshotEntity {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PROCESS_GROUP_STATUS_SNAPSHOT = "processGroupStatusSnapshot";
  @SerializedName(SERIALIZED_NAME_PROCESS_GROUP_STATUS_SNAPSHOT)
  private ProcessGroupStatusSnapshotDTO processGroupStatusSnapshot;

  public static final String SERIALIZED_NAME_CAN_READ = "canRead";
  @SerializedName(SERIALIZED_NAME_CAN_READ)
  private Boolean canRead;


  public ProcessGroupStatusSnapshotEntity id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of the process group.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the process group.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ProcessGroupStatusSnapshotEntity processGroupStatusSnapshot(ProcessGroupStatusSnapshotDTO processGroupStatusSnapshot) {
    
    this.processGroupStatusSnapshot = processGroupStatusSnapshot;
    return this;
  }

   /**
   * Get processGroupStatusSnapshot
   * @return processGroupStatusSnapshot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProcessGroupStatusSnapshotDTO getProcessGroupStatusSnapshot() {
    return processGroupStatusSnapshot;
  }


  public void setProcessGroupStatusSnapshot(ProcessGroupStatusSnapshotDTO processGroupStatusSnapshot) {
    this.processGroupStatusSnapshot = processGroupStatusSnapshot;
  }


   /**
   * Indicates whether the user can read a given resource.
   * @return canRead
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the user can read a given resource.")

  public Boolean getCanRead() {
    return canRead;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessGroupStatusSnapshotEntity processGroupStatusSnapshotEntity = (ProcessGroupStatusSnapshotEntity) o;
    return Objects.equals(this.id, processGroupStatusSnapshotEntity.id) &&
        Objects.equals(this.processGroupStatusSnapshot, processGroupStatusSnapshotEntity.processGroupStatusSnapshot) &&
        Objects.equals(this.canRead, processGroupStatusSnapshotEntity.canRead);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, processGroupStatusSnapshot, canRead);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessGroupStatusSnapshotEntity {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    processGroupStatusSnapshot: ").append(toIndentedString(processGroupStatusSnapshot)).append("\n");
    sb.append("    canRead: ").append(toIndentedString(canRead)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

