/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.RevisionDTO;

/**
 * ScheduleComponentsEntity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T16:10:34.866069300-08:00[America/Los_Angeles]")
public class ScheduleComponentsEntity {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  /**
   * The desired state of the descendant components
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    RUNNING("RUNNING"),
    
    STOPPED("STOPPED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_COMPONENTS = "components";
  @SerializedName(SERIALIZED_NAME_COMPONENTS)
  private Map<String, RevisionDTO> components = null;


  public ScheduleComponentsEntity id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of the ProcessGroup
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the ProcessGroup")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ScheduleComponentsEntity state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * The desired state of the descendant components
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The desired state of the descendant components")

  public StateEnum getState() {
    return state;
  }


  public void setState(StateEnum state) {
    this.state = state;
  }


  public ScheduleComponentsEntity components(Map<String, RevisionDTO> components) {
    
    this.components = components;
    return this;
  }

  public ScheduleComponentsEntity putComponentsItem(String key, RevisionDTO componentsItem) {
    if (this.components == null) {
      this.components = new HashMap<String, RevisionDTO>();
    }
    this.components.put(key, componentsItem);
    return this;
  }

   /**
   * Optional components to schedule. If not specified, all authorized descendant components will be used.
   * @return components
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional components to schedule. If not specified, all authorized descendant components will be used.")

  public Map<String, RevisionDTO> getComponents() {
    return components;
  }


  public void setComponents(Map<String, RevisionDTO> components) {
    this.components = components;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleComponentsEntity scheduleComponentsEntity = (ScheduleComponentsEntity) o;
    return Objects.equals(this.id, scheduleComponentsEntity.id) &&
        Objects.equals(this.state, scheduleComponentsEntity.state) &&
        Objects.equals(this.components, scheduleComponentsEntity.components);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, state, components);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleComponentsEntity {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

