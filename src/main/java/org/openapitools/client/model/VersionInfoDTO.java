/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * VersionInfoDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T16:10:34.866069300-08:00[America/Los_Angeles]")
public class VersionInfoDTO {
  public static final String SERIALIZED_NAME_NI_FI_VERSION = "niFiVersion";
  @SerializedName(SERIALIZED_NAME_NI_FI_VERSION)
  private String niFiVersion;

  public static final String SERIALIZED_NAME_JAVA_VENDOR = "javaVendor";
  @SerializedName(SERIALIZED_NAME_JAVA_VENDOR)
  private String javaVendor;

  public static final String SERIALIZED_NAME_JAVA_VERSION = "javaVersion";
  @SerializedName(SERIALIZED_NAME_JAVA_VERSION)
  private String javaVersion;

  public static final String SERIALIZED_NAME_OS_NAME = "osName";
  @SerializedName(SERIALIZED_NAME_OS_NAME)
  private String osName;

  public static final String SERIALIZED_NAME_OS_VERSION = "osVersion";
  @SerializedName(SERIALIZED_NAME_OS_VERSION)
  private String osVersion;

  public static final String SERIALIZED_NAME_OS_ARCHITECTURE = "osArchitecture";
  @SerializedName(SERIALIZED_NAME_OS_ARCHITECTURE)
  private String osArchitecture;

  public static final String SERIALIZED_NAME_BUILD_TAG = "buildTag";
  @SerializedName(SERIALIZED_NAME_BUILD_TAG)
  private String buildTag;

  public static final String SERIALIZED_NAME_BUILD_REVISION = "buildRevision";
  @SerializedName(SERIALIZED_NAME_BUILD_REVISION)
  private String buildRevision;

  public static final String SERIALIZED_NAME_BUILD_BRANCH = "buildBranch";
  @SerializedName(SERIALIZED_NAME_BUILD_BRANCH)
  private String buildBranch;

  public static final String SERIALIZED_NAME_BUILD_TIMESTAMP = "buildTimestamp";
  @SerializedName(SERIALIZED_NAME_BUILD_TIMESTAMP)
  private OffsetDateTime buildTimestamp;


  public VersionInfoDTO niFiVersion(String niFiVersion) {
    
    this.niFiVersion = niFiVersion;
    return this;
  }

   /**
   * The version of this NiFi.
   * @return niFiVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of this NiFi.")

  public String getNiFiVersion() {
    return niFiVersion;
  }


  public void setNiFiVersion(String niFiVersion) {
    this.niFiVersion = niFiVersion;
  }


  public VersionInfoDTO javaVendor(String javaVendor) {
    
    this.javaVendor = javaVendor;
    return this;
  }

   /**
   * Java JVM vendor
   * @return javaVendor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Java JVM vendor")

  public String getJavaVendor() {
    return javaVendor;
  }


  public void setJavaVendor(String javaVendor) {
    this.javaVendor = javaVendor;
  }


  public VersionInfoDTO javaVersion(String javaVersion) {
    
    this.javaVersion = javaVersion;
    return this;
  }

   /**
   * Java version
   * @return javaVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Java version")

  public String getJavaVersion() {
    return javaVersion;
  }


  public void setJavaVersion(String javaVersion) {
    this.javaVersion = javaVersion;
  }


  public VersionInfoDTO osName(String osName) {
    
    this.osName = osName;
    return this;
  }

   /**
   * Host operating system name
   * @return osName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Host operating system name")

  public String getOsName() {
    return osName;
  }


  public void setOsName(String osName) {
    this.osName = osName;
  }


  public VersionInfoDTO osVersion(String osVersion) {
    
    this.osVersion = osVersion;
    return this;
  }

   /**
   * Host operating system version
   * @return osVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Host operating system version")

  public String getOsVersion() {
    return osVersion;
  }


  public void setOsVersion(String osVersion) {
    this.osVersion = osVersion;
  }


  public VersionInfoDTO osArchitecture(String osArchitecture) {
    
    this.osArchitecture = osArchitecture;
    return this;
  }

   /**
   * Host operating system architecture
   * @return osArchitecture
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Host operating system architecture")

  public String getOsArchitecture() {
    return osArchitecture;
  }


  public void setOsArchitecture(String osArchitecture) {
    this.osArchitecture = osArchitecture;
  }


  public VersionInfoDTO buildTag(String buildTag) {
    
    this.buildTag = buildTag;
    return this;
  }

   /**
   * Build tag
   * @return buildTag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Build tag")

  public String getBuildTag() {
    return buildTag;
  }


  public void setBuildTag(String buildTag) {
    this.buildTag = buildTag;
  }


  public VersionInfoDTO buildRevision(String buildRevision) {
    
    this.buildRevision = buildRevision;
    return this;
  }

   /**
   * Build revision or commit hash
   * @return buildRevision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Build revision or commit hash")

  public String getBuildRevision() {
    return buildRevision;
  }


  public void setBuildRevision(String buildRevision) {
    this.buildRevision = buildRevision;
  }


  public VersionInfoDTO buildBranch(String buildBranch) {
    
    this.buildBranch = buildBranch;
    return this;
  }

   /**
   * Build branch
   * @return buildBranch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Build branch")

  public String getBuildBranch() {
    return buildBranch;
  }


  public void setBuildBranch(String buildBranch) {
    this.buildBranch = buildBranch;
  }


  public VersionInfoDTO buildTimestamp(OffsetDateTime buildTimestamp) {
    
    this.buildTimestamp = buildTimestamp;
    return this;
  }

   /**
   * Build timestamp
   * @return buildTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Build timestamp")

  public OffsetDateTime getBuildTimestamp() {
    return buildTimestamp;
  }


  public void setBuildTimestamp(OffsetDateTime buildTimestamp) {
    this.buildTimestamp = buildTimestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionInfoDTO versionInfoDTO = (VersionInfoDTO) o;
    return Objects.equals(this.niFiVersion, versionInfoDTO.niFiVersion) &&
        Objects.equals(this.javaVendor, versionInfoDTO.javaVendor) &&
        Objects.equals(this.javaVersion, versionInfoDTO.javaVersion) &&
        Objects.equals(this.osName, versionInfoDTO.osName) &&
        Objects.equals(this.osVersion, versionInfoDTO.osVersion) &&
        Objects.equals(this.osArchitecture, versionInfoDTO.osArchitecture) &&
        Objects.equals(this.buildTag, versionInfoDTO.buildTag) &&
        Objects.equals(this.buildRevision, versionInfoDTO.buildRevision) &&
        Objects.equals(this.buildBranch, versionInfoDTO.buildBranch) &&
        Objects.equals(this.buildTimestamp, versionInfoDTO.buildTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(niFiVersion, javaVendor, javaVersion, osName, osVersion, osArchitecture, buildTag, buildRevision, buildBranch, buildTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionInfoDTO {\n");
    sb.append("    niFiVersion: ").append(toIndentedString(niFiVersion)).append("\n");
    sb.append("    javaVendor: ").append(toIndentedString(javaVendor)).append("\n");
    sb.append("    javaVersion: ").append(toIndentedString(javaVersion)).append("\n");
    sb.append("    osName: ").append(toIndentedString(osName)).append("\n");
    sb.append("    osVersion: ").append(toIndentedString(osVersion)).append("\n");
    sb.append("    osArchitecture: ").append(toIndentedString(osArchitecture)).append("\n");
    sb.append("    buildTag: ").append(toIndentedString(buildTag)).append("\n");
    sb.append("    buildRevision: ").append(toIndentedString(buildRevision)).append("\n");
    sb.append("    buildBranch: ").append(toIndentedString(buildBranch)).append("\n");
    sb.append("    buildTimestamp: ").append(toIndentedString(buildTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

