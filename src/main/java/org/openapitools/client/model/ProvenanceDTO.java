/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ProvenanceRequestDTO;
import org.openapitools.client.model.ProvenanceResultsDTO;

/**
 * ProvenanceDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T16:10:34.866069300-08:00[America/Los_Angeles]")
public class ProvenanceDTO {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public static final String SERIALIZED_NAME_SUBMISSION_TIME = "submissionTime";
  @SerializedName(SERIALIZED_NAME_SUBMISSION_TIME)
  private String submissionTime;

  public static final String SERIALIZED_NAME_EXPIRATION = "expiration";
  @SerializedName(SERIALIZED_NAME_EXPIRATION)
  private String expiration;

  public static final String SERIALIZED_NAME_PERCENT_COMPLETED = "percentCompleted";
  @SerializedName(SERIALIZED_NAME_PERCENT_COMPLETED)
  private Integer percentCompleted;

  public static final String SERIALIZED_NAME_FINISHED = "finished";
  @SerializedName(SERIALIZED_NAME_FINISHED)
  private Boolean finished;

  public static final String SERIALIZED_NAME_REQUEST = "request";
  @SerializedName(SERIALIZED_NAME_REQUEST)
  private ProvenanceRequestDTO request;

  public static final String SERIALIZED_NAME_RESULTS = "results";
  @SerializedName(SERIALIZED_NAME_RESULTS)
  private ProvenanceResultsDTO results;


  public ProvenanceDTO id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of the provenance query.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the provenance query.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ProvenanceDTO uri(String uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * The URI for this query. Used for obtaining/deleting the request at a later time
   * @return uri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URI for this query. Used for obtaining/deleting the request at a later time")

  public String getUri() {
    return uri;
  }


  public void setUri(String uri) {
    this.uri = uri;
  }


  public ProvenanceDTO submissionTime(String submissionTime) {
    
    this.submissionTime = submissionTime;
    return this;
  }

   /**
   * The timestamp when the query was submitted.
   * @return submissionTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp when the query was submitted.")

  public String getSubmissionTime() {
    return submissionTime;
  }


  public void setSubmissionTime(String submissionTime) {
    this.submissionTime = submissionTime;
  }


  public ProvenanceDTO expiration(String expiration) {
    
    this.expiration = expiration;
    return this;
  }

   /**
   * The timestamp when the query will expire.
   * @return expiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp when the query will expire.")

  public String getExpiration() {
    return expiration;
  }


  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }


  public ProvenanceDTO percentCompleted(Integer percentCompleted) {
    
    this.percentCompleted = percentCompleted;
    return this;
  }

   /**
   * The current percent complete.
   * @return percentCompleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current percent complete.")

  public Integer getPercentCompleted() {
    return percentCompleted;
  }


  public void setPercentCompleted(Integer percentCompleted) {
    this.percentCompleted = percentCompleted;
  }


  public ProvenanceDTO finished(Boolean finished) {
    
    this.finished = finished;
    return this;
  }

   /**
   * Whether the query has finished.
   * @return finished
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the query has finished.")

  public Boolean getFinished() {
    return finished;
  }


  public void setFinished(Boolean finished) {
    this.finished = finished;
  }


  public ProvenanceDTO request(ProvenanceRequestDTO request) {
    
    this.request = request;
    return this;
  }

   /**
   * Get request
   * @return request
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProvenanceRequestDTO getRequest() {
    return request;
  }


  public void setRequest(ProvenanceRequestDTO request) {
    this.request = request;
  }


  public ProvenanceDTO results(ProvenanceResultsDTO results) {
    
    this.results = results;
    return this;
  }

   /**
   * Get results
   * @return results
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProvenanceResultsDTO getResults() {
    return results;
  }


  public void setResults(ProvenanceResultsDTO results) {
    this.results = results;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProvenanceDTO provenanceDTO = (ProvenanceDTO) o;
    return Objects.equals(this.id, provenanceDTO.id) &&
        Objects.equals(this.uri, provenanceDTO.uri) &&
        Objects.equals(this.submissionTime, provenanceDTO.submissionTime) &&
        Objects.equals(this.expiration, provenanceDTO.expiration) &&
        Objects.equals(this.percentCompleted, provenanceDTO.percentCompleted) &&
        Objects.equals(this.finished, provenanceDTO.finished) &&
        Objects.equals(this.request, provenanceDTO.request) &&
        Objects.equals(this.results, provenanceDTO.results);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, uri, submissionTime, expiration, percentCompleted, finished, request, results);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProvenanceDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    submissionTime: ").append(toIndentedString(submissionTime)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    percentCompleted: ").append(toIndentedString(percentCompleted)).append("\n");
    sb.append("    finished: ").append(toIndentedString(finished)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

