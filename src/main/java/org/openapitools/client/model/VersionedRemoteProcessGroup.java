/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.client.model.ThePositionOfAComponentOnTheGraph;
import org.openapitools.client.model.VersionedRemoteGroupPort;

/**
 * VersionedRemoteProcessGroup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T16:10:34.866069300-08:00[America/Los_Angeles]")
public class VersionedRemoteProcessGroup {
  public static final String SERIALIZED_NAME_IDENTIFIER = "identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private ThePositionOfAComponentOnTheGraph position;

  public static final String SERIALIZED_NAME_TARGET_URI = "targetUri";
  @SerializedName(SERIALIZED_NAME_TARGET_URI)
  private String targetUri;

  public static final String SERIALIZED_NAME_TARGET_URIS = "targetUris";
  @SerializedName(SERIALIZED_NAME_TARGET_URIS)
  private String targetUris;

  public static final String SERIALIZED_NAME_COMMUNICATIONS_TIMEOUT = "communicationsTimeout";
  @SerializedName(SERIALIZED_NAME_COMMUNICATIONS_TIMEOUT)
  private String communicationsTimeout;

  public static final String SERIALIZED_NAME_YIELD_DURATION = "yieldDuration";
  @SerializedName(SERIALIZED_NAME_YIELD_DURATION)
  private String yieldDuration;

  /**
   * The Transport Protocol that is used for Site-to-Site communications
   */
  @JsonAdapter(TransportProtocolEnum.Adapter.class)
  public enum TransportProtocolEnum {
    RAW("RAW"),
    
    HTTP("HTTP");

    private String value;

    TransportProtocolEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TransportProtocolEnum fromValue(String value) {
      for (TransportProtocolEnum b : TransportProtocolEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TransportProtocolEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TransportProtocolEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TransportProtocolEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TransportProtocolEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TRANSPORT_PROTOCOL = "transportProtocol";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_PROTOCOL)
  private TransportProtocolEnum transportProtocol;

  public static final String SERIALIZED_NAME_LOCAL_NETWORK_INTERFACE = "localNetworkInterface";
  @SerializedName(SERIALIZED_NAME_LOCAL_NETWORK_INTERFACE)
  private String localNetworkInterface;

  public static final String SERIALIZED_NAME_PROXY_HOST = "proxyHost";
  @SerializedName(SERIALIZED_NAME_PROXY_HOST)
  private String proxyHost;

  public static final String SERIALIZED_NAME_PROXY_PORT = "proxyPort";
  @SerializedName(SERIALIZED_NAME_PROXY_PORT)
  private Integer proxyPort;

  public static final String SERIALIZED_NAME_PROXY_USER = "proxyUser";
  @SerializedName(SERIALIZED_NAME_PROXY_USER)
  private String proxyUser;

  public static final String SERIALIZED_NAME_INPUT_PORTS = "inputPorts";
  @SerializedName(SERIALIZED_NAME_INPUT_PORTS)
  private Set<VersionedRemoteGroupPort> inputPorts = null;

  public static final String SERIALIZED_NAME_OUTPUT_PORTS = "outputPorts";
  @SerializedName(SERIALIZED_NAME_OUTPUT_PORTS)
  private Set<VersionedRemoteGroupPort> outputPorts = null;

  /**
   * Gets or Sets componentType
   */
  @JsonAdapter(ComponentTypeEnum.Adapter.class)
  public enum ComponentTypeEnum {
    CONNECTION("CONNECTION"),
    
    PROCESSOR("PROCESSOR"),
    
    PROCESS_GROUP("PROCESS_GROUP"),
    
    REMOTE_PROCESS_GROUP("REMOTE_PROCESS_GROUP"),
    
    INPUT_PORT("INPUT_PORT"),
    
    OUTPUT_PORT("OUTPUT_PORT"),
    
    REMOTE_INPUT_PORT("REMOTE_INPUT_PORT"),
    
    REMOTE_OUTPUT_PORT("REMOTE_OUTPUT_PORT"),
    
    FUNNEL("FUNNEL"),
    
    LABEL("LABEL"),
    
    CONTROLLER_SERVICE("CONTROLLER_SERVICE");

    private String value;

    ComponentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ComponentTypeEnum fromValue(String value) {
      for (ComponentTypeEnum b : ComponentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ComponentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ComponentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ComponentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ComponentTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_COMPONENT_TYPE = "componentType";
  @SerializedName(SERIALIZED_NAME_COMPONENT_TYPE)
  private ComponentTypeEnum componentType;

  public static final String SERIALIZED_NAME_GROUP_IDENTIFIER = "groupIdentifier";
  @SerializedName(SERIALIZED_NAME_GROUP_IDENTIFIER)
  private String groupIdentifier;


  public VersionedRemoteProcessGroup identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

   /**
   * The component&#39;s unique identifier
   * @return identifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The component's unique identifier")

  public String getIdentifier() {
    return identifier;
  }


  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public VersionedRemoteProcessGroup name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The component&#39;s name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The component's name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public VersionedRemoteProcessGroup comments(String comments) {
    
    this.comments = comments;
    return this;
  }

   /**
   * The user-supplied comments for the component
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user-supplied comments for the component")

  public String getComments() {
    return comments;
  }


  public void setComments(String comments) {
    this.comments = comments;
  }


  public VersionedRemoteProcessGroup position(ThePositionOfAComponentOnTheGraph position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThePositionOfAComponentOnTheGraph getPosition() {
    return position;
  }


  public void setPosition(ThePositionOfAComponentOnTheGraph position) {
    this.position = position;
  }


  public VersionedRemoteProcessGroup targetUri(String targetUri) {
    
    this.targetUri = targetUri;
    return this;
  }

   /**
   * The target URI of the remote process group. If target uri is not set, but uris are set, then returns the first url in the urls. If neither target uri nor uris are set, then returns null.
   * @return targetUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The target URI of the remote process group. If target uri is not set, but uris are set, then returns the first url in the urls. If neither target uri nor uris are set, then returns null.")

  public String getTargetUri() {
    return targetUri;
  }


  public void setTargetUri(String targetUri) {
    this.targetUri = targetUri;
  }


  public VersionedRemoteProcessGroup targetUris(String targetUris) {
    
    this.targetUris = targetUris;
    return this;
  }

   /**
   * The target URI of the remote process group. If target uris is not set but target uri is set, then returns the single target uri. If neither target uris nor target uri is set, then returns null.
   * @return targetUris
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The target URI of the remote process group. If target uris is not set but target uri is set, then returns the single target uri. If neither target uris nor target uri is set, then returns null.")

  public String getTargetUris() {
    return targetUris;
  }


  public void setTargetUris(String targetUris) {
    this.targetUris = targetUris;
  }


  public VersionedRemoteProcessGroup communicationsTimeout(String communicationsTimeout) {
    
    this.communicationsTimeout = communicationsTimeout;
    return this;
  }

   /**
   * The time period used for the timeout when communicating with the target.
   * @return communicationsTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time period used for the timeout when communicating with the target.")

  public String getCommunicationsTimeout() {
    return communicationsTimeout;
  }


  public void setCommunicationsTimeout(String communicationsTimeout) {
    this.communicationsTimeout = communicationsTimeout;
  }


  public VersionedRemoteProcessGroup yieldDuration(String yieldDuration) {
    
    this.yieldDuration = yieldDuration;
    return this;
  }

   /**
   * When yielding, this amount of time must elapse before the remote process group is scheduled again.
   * @return yieldDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When yielding, this amount of time must elapse before the remote process group is scheduled again.")

  public String getYieldDuration() {
    return yieldDuration;
  }


  public void setYieldDuration(String yieldDuration) {
    this.yieldDuration = yieldDuration;
  }


  public VersionedRemoteProcessGroup transportProtocol(TransportProtocolEnum transportProtocol) {
    
    this.transportProtocol = transportProtocol;
    return this;
  }

   /**
   * The Transport Protocol that is used for Site-to-Site communications
   * @return transportProtocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Transport Protocol that is used for Site-to-Site communications")

  public TransportProtocolEnum getTransportProtocol() {
    return transportProtocol;
  }


  public void setTransportProtocol(TransportProtocolEnum transportProtocol) {
    this.transportProtocol = transportProtocol;
  }


  public VersionedRemoteProcessGroup localNetworkInterface(String localNetworkInterface) {
    
    this.localNetworkInterface = localNetworkInterface;
    return this;
  }

   /**
   * The local network interface to send/receive data. If not specified, any local address is used. If clustered, all nodes must have an interface with this identifier.
   * @return localNetworkInterface
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The local network interface to send/receive data. If not specified, any local address is used. If clustered, all nodes must have an interface with this identifier.")

  public String getLocalNetworkInterface() {
    return localNetworkInterface;
  }


  public void setLocalNetworkInterface(String localNetworkInterface) {
    this.localNetworkInterface = localNetworkInterface;
  }


  public VersionedRemoteProcessGroup proxyHost(String proxyHost) {
    
    this.proxyHost = proxyHost;
    return this;
  }

   /**
   * Get proxyHost
   * @return proxyHost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProxyHost() {
    return proxyHost;
  }


  public void setProxyHost(String proxyHost) {
    this.proxyHost = proxyHost;
  }


  public VersionedRemoteProcessGroup proxyPort(Integer proxyPort) {
    
    this.proxyPort = proxyPort;
    return this;
  }

   /**
   * Get proxyPort
   * @return proxyPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProxyPort() {
    return proxyPort;
  }


  public void setProxyPort(Integer proxyPort) {
    this.proxyPort = proxyPort;
  }


  public VersionedRemoteProcessGroup proxyUser(String proxyUser) {
    
    this.proxyUser = proxyUser;
    return this;
  }

   /**
   * Get proxyUser
   * @return proxyUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProxyUser() {
    return proxyUser;
  }


  public void setProxyUser(String proxyUser) {
    this.proxyUser = proxyUser;
  }


  public VersionedRemoteProcessGroup inputPorts(Set<VersionedRemoteGroupPort> inputPorts) {
    
    this.inputPorts = inputPorts;
    return this;
  }

  public VersionedRemoteProcessGroup addInputPortsItem(VersionedRemoteGroupPort inputPortsItem) {
    if (this.inputPorts == null) {
      this.inputPorts = new LinkedHashSet<VersionedRemoteGroupPort>();
    }
    this.inputPorts.add(inputPortsItem);
    return this;
  }

   /**
   * A Set of Input Ports that can be connected to, in order to send data to the remote NiFi instance
   * @return inputPorts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A Set of Input Ports that can be connected to, in order to send data to the remote NiFi instance")

  public Set<VersionedRemoteGroupPort> getInputPorts() {
    return inputPorts;
  }


  public void setInputPorts(Set<VersionedRemoteGroupPort> inputPorts) {
    this.inputPorts = inputPorts;
  }


  public VersionedRemoteProcessGroup outputPorts(Set<VersionedRemoteGroupPort> outputPorts) {
    
    this.outputPorts = outputPorts;
    return this;
  }

  public VersionedRemoteProcessGroup addOutputPortsItem(VersionedRemoteGroupPort outputPortsItem) {
    if (this.outputPorts == null) {
      this.outputPorts = new LinkedHashSet<VersionedRemoteGroupPort>();
    }
    this.outputPorts.add(outputPortsItem);
    return this;
  }

   /**
   * A Set of Output Ports that can be connected to, in order to pull data from the remote NiFi instance
   * @return outputPorts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A Set of Output Ports that can be connected to, in order to pull data from the remote NiFi instance")

  public Set<VersionedRemoteGroupPort> getOutputPorts() {
    return outputPorts;
  }


  public void setOutputPorts(Set<VersionedRemoteGroupPort> outputPorts) {
    this.outputPorts = outputPorts;
  }


  public VersionedRemoteProcessGroup componentType(ComponentTypeEnum componentType) {
    
    this.componentType = componentType;
    return this;
  }

   /**
   * Get componentType
   * @return componentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComponentTypeEnum getComponentType() {
    return componentType;
  }


  public void setComponentType(ComponentTypeEnum componentType) {
    this.componentType = componentType;
  }


  public VersionedRemoteProcessGroup groupIdentifier(String groupIdentifier) {
    
    this.groupIdentifier = groupIdentifier;
    return this;
  }

   /**
   * The ID of the Process Group that this component belongs to
   * @return groupIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Process Group that this component belongs to")

  public String getGroupIdentifier() {
    return groupIdentifier;
  }


  public void setGroupIdentifier(String groupIdentifier) {
    this.groupIdentifier = groupIdentifier;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionedRemoteProcessGroup versionedRemoteProcessGroup = (VersionedRemoteProcessGroup) o;
    return Objects.equals(this.identifier, versionedRemoteProcessGroup.identifier) &&
        Objects.equals(this.name, versionedRemoteProcessGroup.name) &&
        Objects.equals(this.comments, versionedRemoteProcessGroup.comments) &&
        Objects.equals(this.position, versionedRemoteProcessGroup.position) &&
        Objects.equals(this.targetUri, versionedRemoteProcessGroup.targetUri) &&
        Objects.equals(this.targetUris, versionedRemoteProcessGroup.targetUris) &&
        Objects.equals(this.communicationsTimeout, versionedRemoteProcessGroup.communicationsTimeout) &&
        Objects.equals(this.yieldDuration, versionedRemoteProcessGroup.yieldDuration) &&
        Objects.equals(this.transportProtocol, versionedRemoteProcessGroup.transportProtocol) &&
        Objects.equals(this.localNetworkInterface, versionedRemoteProcessGroup.localNetworkInterface) &&
        Objects.equals(this.proxyHost, versionedRemoteProcessGroup.proxyHost) &&
        Objects.equals(this.proxyPort, versionedRemoteProcessGroup.proxyPort) &&
        Objects.equals(this.proxyUser, versionedRemoteProcessGroup.proxyUser) &&
        Objects.equals(this.inputPorts, versionedRemoteProcessGroup.inputPorts) &&
        Objects.equals(this.outputPorts, versionedRemoteProcessGroup.outputPorts) &&
        Objects.equals(this.componentType, versionedRemoteProcessGroup.componentType) &&
        Objects.equals(this.groupIdentifier, versionedRemoteProcessGroup.groupIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, name, comments, position, targetUri, targetUris, communicationsTimeout, yieldDuration, transportProtocol, localNetworkInterface, proxyHost, proxyPort, proxyUser, inputPorts, outputPorts, componentType, groupIdentifier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionedRemoteProcessGroup {\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    targetUri: ").append(toIndentedString(targetUri)).append("\n");
    sb.append("    targetUris: ").append(toIndentedString(targetUris)).append("\n");
    sb.append("    communicationsTimeout: ").append(toIndentedString(communicationsTimeout)).append("\n");
    sb.append("    yieldDuration: ").append(toIndentedString(yieldDuration)).append("\n");
    sb.append("    transportProtocol: ").append(toIndentedString(transportProtocol)).append("\n");
    sb.append("    localNetworkInterface: ").append(toIndentedString(localNetworkInterface)).append("\n");
    sb.append("    proxyHost: ").append(toIndentedString(proxyHost)).append("\n");
    sb.append("    proxyPort: ").append(toIndentedString(proxyPort)).append("\n");
    sb.append("    proxyUser: ").append(toIndentedString(proxyUser)).append("\n");
    sb.append("    inputPorts: ").append(toIndentedString(inputPorts)).append("\n");
    sb.append("    outputPorts: ").append(toIndentedString(outputPorts)).append("\n");
    sb.append("    componentType: ").append(toIndentedString(componentType)).append("\n");
    sb.append("    groupIdentifier: ").append(toIndentedString(groupIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

