/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.Link;
import org.openapitools.client.model.Permissions;

/**
 * VersionedFlow
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-19T16:10:34.866069300-08:00[America/Los_Angeles]")
public class VersionedFlow {
  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private Link link;

  public static final String SERIALIZED_NAME_IDENTIFIER = "identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_BUCKET_IDENTIFIER = "bucketIdentifier";
  @SerializedName(SERIALIZED_NAME_BUCKET_IDENTIFIER)
  private String bucketIdentifier;

  public static final String SERIALIZED_NAME_BUCKET_NAME = "bucketName";
  @SerializedName(SERIALIZED_NAME_BUCKET_NAME)
  private String bucketName;

  public static final String SERIALIZED_NAME_CREATED_TIMESTAMP = "createdTimestamp";
  @SerializedName(SERIALIZED_NAME_CREATED_TIMESTAMP)
  private Long createdTimestamp;

  public static final String SERIALIZED_NAME_MODIFIED_TIMESTAMP = "modifiedTimestamp";
  @SerializedName(SERIALIZED_NAME_MODIFIED_TIMESTAMP)
  private Long modifiedTimestamp;

  /**
   * The type of item.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    FLOW("Flow");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_PERMISSIONS = "permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private Permissions permissions;

  public static final String SERIALIZED_NAME_VERSION_COUNT = "versionCount";
  @SerializedName(SERIALIZED_NAME_VERSION_COUNT)
  private Long versionCount;


  public VersionedFlow link(Link link) {
    
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Link getLink() {
    return link;
  }


  public void setLink(Link link) {
    this.link = link;
  }


  public VersionedFlow identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

   /**
   * An ID to uniquely identify this object.
   * @return identifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An ID to uniquely identify this object.")

  public String getIdentifier() {
    return identifier;
  }


  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public VersionedFlow name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the item.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the item.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public VersionedFlow description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description of the item.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description of the item.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public VersionedFlow bucketIdentifier(String bucketIdentifier) {
    
    this.bucketIdentifier = bucketIdentifier;
    return this;
  }

   /**
   * The identifier of the bucket this items belongs to.
   * @return bucketIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifier of the bucket this items belongs to.")

  public String getBucketIdentifier() {
    return bucketIdentifier;
  }


  public void setBucketIdentifier(String bucketIdentifier) {
    this.bucketIdentifier = bucketIdentifier;
  }


   /**
   * The name of the bucket this items belongs to.
   * @return bucketName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the bucket this items belongs to.")

  public String getBucketName() {
    return bucketName;
  }




  public VersionedFlow createdTimestamp(Long createdTimestamp) {
    
    this.createdTimestamp = createdTimestamp;
    return this;
  }

   /**
   * The timestamp of when the item was created.
   * minimum: 1
   * @return createdTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of when the item was created.")

  public Long getCreatedTimestamp() {
    return createdTimestamp;
  }


  public void setCreatedTimestamp(Long createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
  }


  public VersionedFlow modifiedTimestamp(Long modifiedTimestamp) {
    
    this.modifiedTimestamp = modifiedTimestamp;
    return this;
  }

   /**
   * The timestamp of when the item was last modified.
   * minimum: 1
   * @return modifiedTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of when the item was last modified.")

  public Long getModifiedTimestamp() {
    return modifiedTimestamp;
  }


  public void setModifiedTimestamp(Long modifiedTimestamp) {
    this.modifiedTimestamp = modifiedTimestamp;
  }


  public VersionedFlow type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of item.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The type of item.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public VersionedFlow permissions(Permissions permissions) {
    
    this.permissions = permissions;
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Permissions getPermissions() {
    return permissions;
  }


  public void setPermissions(Permissions permissions) {
    this.permissions = permissions;
  }


   /**
   * The number of versions of this flow.
   * minimum: 0
   * @return versionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of versions of this flow.")

  public Long getVersionCount() {
    return versionCount;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionedFlow versionedFlow = (VersionedFlow) o;
    return Objects.equals(this.link, versionedFlow.link) &&
        Objects.equals(this.identifier, versionedFlow.identifier) &&
        Objects.equals(this.name, versionedFlow.name) &&
        Objects.equals(this.description, versionedFlow.description) &&
        Objects.equals(this.bucketIdentifier, versionedFlow.bucketIdentifier) &&
        Objects.equals(this.bucketName, versionedFlow.bucketName) &&
        Objects.equals(this.createdTimestamp, versionedFlow.createdTimestamp) &&
        Objects.equals(this.modifiedTimestamp, versionedFlow.modifiedTimestamp) &&
        Objects.equals(this.type, versionedFlow.type) &&
        Objects.equals(this.permissions, versionedFlow.permissions) &&
        Objects.equals(this.versionCount, versionedFlow.versionCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(link, identifier, name, description, bucketIdentifier, bucketName, createdTimestamp, modifiedTimestamp, type, permissions, versionCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionedFlow {\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    bucketIdentifier: ").append(toIndentedString(bucketIdentifier)).append("\n");
    sb.append("    bucketName: ").append(toIndentedString(bucketName)).append("\n");
    sb.append("    createdTimestamp: ").append(toIndentedString(createdTimestamp)).append("\n");
    sb.append("    modifiedTimestamp: ").append(toIndentedString(modifiedTimestamp)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    versionCount: ").append(toIndentedString(versionCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

